<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.takeout.mapper.VoucherMapper" >
  <resultMap id="BaseResultMap" type="com.takeout.entity.Voucher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="worth" property="worth" jdbcType="INTEGER" />
    <result column="gettime" property="gettime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="isused" property="isused" jdbcType="TINYINT" />
    <result column="condition" property="condition" jdbcType="INTEGER" />
    <result column="shop" property="shop" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user, worth, gettime, endtime, isused, condition, shop
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.takeout.entity.VoucherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from voucher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from voucher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from voucher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.takeout.entity.VoucherExample" >
    delete from voucher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.takeout.entity.Voucher" >
    insert into voucher (id, user, worth, 
      gettime, endtime, isused, 
      condition, shop)
    values (#{id,jdbcType=INTEGER}, #{user,jdbcType=VARCHAR}, #{worth,jdbcType=INTEGER}, 
      #{gettime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{isused,jdbcType=TINYINT}, 
      #{condition,jdbcType=INTEGER}, #{shop,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.takeout.entity.Voucher" >
    insert into voucher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="worth != null" >
        worth,
      </if>
      <if test="gettime != null" >
        gettime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="isused != null" >
        isused,
      </if>
      <if test="condition != null" >
        condition,
      </if>
      <if test="shop != null" >
        shop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="worth != null" >
        #{worth,jdbcType=INTEGER},
      </if>
      <if test="gettime != null" >
        #{gettime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isused != null" >
        #{isused,jdbcType=TINYINT},
      </if>
      <if test="condition != null" >
        #{condition,jdbcType=INTEGER},
      </if>
      <if test="shop != null" >
        #{shop,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.takeout.entity.VoucherExample" resultType="java.lang.Integer" >
    select count(*) from voucher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update voucher
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.user != null" >
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.worth != null" >
        worth = #{record.worth,jdbcType=INTEGER},
      </if>
      <if test="record.gettime != null" >
        gettime = #{record.gettime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isused != null" >
        isused = #{record.isused,jdbcType=TINYINT},
      </if>
      <if test="record.condition != null" >
        condition = #{record.condition,jdbcType=INTEGER},
      </if>
      <if test="record.shop != null" >
        shop = #{record.shop,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update voucher
    set id = #{record.id,jdbcType=INTEGER},
      user = #{record.user,jdbcType=VARCHAR},
      worth = #{record.worth,jdbcType=INTEGER},
      gettime = #{record.gettime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      isused = #{record.isused,jdbcType=TINYINT},
      condition = #{record.condition,jdbcType=INTEGER},
      shop = #{record.shop,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.takeout.entity.Voucher" >
    update voucher
    <set >
      <if test="user != null" >
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="worth != null" >
        worth = #{worth,jdbcType=INTEGER},
      </if>
      <if test="gettime != null" >
        gettime = #{gettime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isused != null" >
        isused = #{isused,jdbcType=TINYINT},
      </if>
      <if test="condition != null" >
        condition = #{condition,jdbcType=INTEGER},
      </if>
      <if test="shop != null" >
        shop = #{shop,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.takeout.entity.Voucher" >
    update voucher
    set user = #{user,jdbcType=VARCHAR},
      worth = #{worth,jdbcType=INTEGER},
      gettime = #{gettime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      isused = #{isused,jdbcType=TINYINT},
      condition = #{condition,jdbcType=INTEGER},
      shop = #{shop,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>