<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.takeout.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.takeout.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="psw" property="psw" jdbcType="VARCHAR" />
    <result column="birth" property="birth" jdbcType="DATE" />
    <result column="headpic" property="headpic" jdbcType="VARCHAR" />
    <result column="regtime" property="regtime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="nicname" property="nicname" jdbcType="VARCHAR" />
    <result column="average" property="average" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, psw, birth, headpic, regtime, type, sex, nicname, average, tel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.takeout.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.takeout.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.takeout.entity.User" >
    insert into user (id, name, psw, 
      birth, headpic, regtime, 
      type, sex, nicname, average, 
      tel)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{psw,jdbcType=VARCHAR}, 
      #{birth,jdbcType=DATE}, #{headpic,jdbcType=VARCHAR}, #{regtime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=BIT}, #{sex,jdbcType=TINYINT}, #{nicname,jdbcType=VARCHAR}, #{average,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.takeout.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="psw != null" >
        psw,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="headpic != null" >
        headpic,
      </if>
      <if test="regtime != null" >
        regtime,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="nicname != null" >
        nicname,
      </if>
      <if test="average != null" >
        average,
      </if>
      <if test="tel != null" >
        tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="psw != null" >
        #{psw,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=DATE},
      </if>
      <if test="headpic != null" >
        #{headpic,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null" >
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="nicname != null" >
        #{nicname,jdbcType=VARCHAR},
      </if>
      <if test="average != null" >
        #{average,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.takeout.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.psw != null" >
        psw = #{record.psw,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null" >
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.headpic != null" >
        headpic = #{record.headpic,jdbcType=VARCHAR},
      </if>
      <if test="record.regtime != null" >
        regtime = #{record.regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.nicname != null" >
        nicname = #{record.nicname,jdbcType=VARCHAR},
      </if>
      <if test="record.average != null" >
        average = #{record.average,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      psw = #{record.psw,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=DATE},
      headpic = #{record.headpic,jdbcType=VARCHAR},
      regtime = #{record.regtime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=BIT},
      sex = #{record.sex,jdbcType=TINYINT},
      nicname = #{record.nicname,jdbcType=VARCHAR},
      average = #{record.average,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.takeout.entity.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="psw != null" >
        psw = #{psw,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="headpic != null" >
        headpic = #{headpic,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null" >
        regtime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="nicname != null" >
        nicname = #{nicname,jdbcType=VARCHAR},
      </if>
      <if test="average != null" >
        average = #{average,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.takeout.entity.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      psw = #{psw,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=DATE},
      headpic = #{headpic,jdbcType=VARCHAR},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=BIT},
      sex = #{sex,jdbcType=TINYINT},
      nicname = #{nicname,jdbcType=VARCHAR},
      average = #{average,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>